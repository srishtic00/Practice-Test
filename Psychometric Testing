#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <limits.h>
#include <stdbool.h>


int lowerBound(int low,int n,int sc[])
{
    int l=0,r=n;
    int mid;
    while(l<r)
    {
        mid=(l+r)/2;
        if(sc[mid]<low)
        l=mid+1;
        else
        r=mid;
    }
    if(l==r)
    return l;
    else return mid;

}
int upperBound(int up,int n,int sc[])
{
    if(sc[n-1]<=up)
    return n;
    int l=0,r=n;
    int mid;
    while(l<r)
    {
        mid=(l+r)/2;
        if(sc[mid]<=up)
        l=mid+1;
        else
         r=mid;
    }
    if(l==r)
    return l;
    else
 return mid;
}
int cmp(const void* a,const void* b)
{
    return *(int *)a-*(int *)b;
}
int* jobOffers(int scores_size, int* scores, int lowerLimits_size, int* lowerLimits, int upperLimits_size, int* upperLimits, int* result_size) {
qsort(scores,scores_size,sizeof(int),cmp);
int *res=(int *)malloc(lowerLimits_size*sizeof(int));
int i=0;
for(i=0;i<lowerLimits_size;i++)
{
   int l=lowerBound(lowerLimits[i],scores_size,scores);
   int u=upperBound(upperLimits[i],scores_size,scores);
   res[i]=u-l;

}
*result_size=lowerLimits_size;
return res;
}
int main()
