#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <limits.h>
#include <stdbool.h>

struct ListNode {
	int val;
	struct ListNode *next;
};

typedef struct ListNode listnode;

listnode* listnode_new(int val) {
	listnode* node = (listnode *) malloc(sizeof(listnode));
	node->val = val;
	node->next = NULL;
	return node;
}

void addNode(listnode* A, int i){
	listnode* temp = listnode_new(i);
	listnode* t = A;
	while(t->next != NULL){
		t = t->next;
	}
	t->next = temp;
}

/*
 * Complete the function below.
 */
 /*void helper(listnode* left,listnode* right,int *answer)
 {
if(right!=NULL)
{
   helper(left,right->next,answer);
   if(left->val!=right->val) 
   {
       answer=0;
       return;
   }
   left=left->next;
}

 }*/
 listnode* temp;
 int check(listnode* p)
 {
     if(p==NULL)
     return true;
     int ispal=check(p->next)&&(temp->val==p->val);
     temp=temp->next;
     return ispal;
 }
 
int isPalin(listnode* A){
    /*int answer=1;
    helper(A,A,&answer);

return answer;*/
temp=A;
return check(A);


}


int main(){
